@use 'base/variables' as v;
@use 'base/mixins' as m;

.galeria {
    @include m.contenedor;

    &-imagenes {
        @include m.grid(1, 2rem);
        @include m.phone {
            @include m.grid(2, 2rem);
        }
        @include m.tablet {
            @include m.grid(3, 2rem);
        }
        @include m.desktop {
            @include m.grid(4, 2rem);
        }
        img {
            height: 20rem;
            object-fit: cover; // Define c√≥mo un elemento responde a la altura y el ancho de su cuadro de contenido.
        }
    }
}

.modal {
    position: fixed; // El elemento queda fijo, no se puede mover
    inset: 0;
    background-color: rgb(v.$black, 0.5);
    display: grid;
    place-items: center;
    animation: fadeIn ease-in 0.5s;

    &.fade-out {
        animation: fadeOut ease-in 0.5s;
    }

    img {
        max-width: 100rem;
    }
}

.btn-cerrar {
    width: 4rem;
    height: 4rem;
    border-radius: 50%;
    background-color: v.$white;
    border: none;
    color: v.$black;
    display: grid;
    place-items: center;
    font-weight: 700;
    cursor: pointer;

    &:hover {
        background-color: lighten(v.$blue_baby, 5%);
    }
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes fadeOut {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}
